server:
  port: 0 # 0번 주입하면 Random Port 실행가능

spring:
  application:
    name: user-service
  zipkin:
    base-url: http://localhost:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true # 외부 웹 접속 허용
      path: /h2-console
  jpa:
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        default_batch_fetch_szie: 100
#  datasource:
#    url: jdbc:h2:mem:test
#    driver-class-name: org.h2.Driver
#    username: sa # 현재는 h2 임베디드 데이터베이스를 간단하게 활용하고 있기 때문에 유저네임과 패스워드가 필요하지 않는다.
#    password: sa
  devtools:
    livereload:
      enabled: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}} # 여러 유저 서비스 인스턴스가 존재하더라도 겹치지 않고 등록뙤도록 패턴 망명

logging:
  level:
    org.hibernate.sql: debug
    me.kyeongho.userservice: debug

decorator:
  datasource:
    p6spy:
      enable-logging: true
      multiline: true
      logging: slf4j
      tracing:
        include-parameter-values: true

greeting:
  message: Welcome to the Simple E-Commerce.

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh

# 기존에 존재하던 jwt 관련 속성들 config 서버로 이관
#jwt:
#  token:
#    header: Authorization
#    issuer: me.kyeongho
#    client-secret: user_microservice_enough_long_secret_key
#    access-expiry: 600000000
#    ignore-url: [ /refresh, /webjars/**, /static/**, /favicon.ico, /templates/**, /h2/**, /h2-console/**, /v3/api-docs, /swagger-resources/**, /**/favicon.*, /*.html, /**/*.html, /**/*.css, /**/*.js, /**/*.bmp, /**/*.png, /v3/api-docs/swagger-config, /**/*.map ]